import express from 'express';import morgan from 'morgan';import cors from 'cors';import dotenv from 'dotenv';dotenv.config();
const app=express();app.use(cors());app.use(express.json());app.use(morgan('tiny'));const PORT=process.env.PORT||10000;const PARSE_URL=process.env.PARSE_URL;const PARSE_APP_ID=process.env.PARSE_APP_ID||'Nestay';const PARSE_MASTER_KEY=process.env.PARSE_MASTER_KEY;
app.get('/health',(req,res)=>res.json({ok:true}));
app.get('/ops/accept', async (req,res)=>{try{const t=req.query.t;if(!t)return res.status(400).send('Missing token');const r=await fetch(`${PARSE_URL}/functions/ops.acceptByToken`,{method:'POST',headers:{'Content-Type':'application/json','X-Parse-Application-Id':PARSE_APP_ID,'X-Parse-Master-Key':PARSE_MASTER_KEY},body:JSON.stringify({token:t})});const d=await r.json();if(d?.result?.ok)return res.send('Operazione accettata. Grazie!');if(d?.result?.reason==='already processed')return res.send('Questa operazione è già stata presa da un altro operatore.');return res.status(400).send('Token non valido o scaduto.');}catch(e){console.error(e);res.status(500).send('Errore interno');}});
app.post('/webhooks/lodgify', async (req,res)=>{try{const payload=req.body||{};const r=await fetch(`${PARSE_URL}/functions/lodgifyWebhook`,{method:'POST',headers:{'Content-Type':'application/json','X-Parse-Application-Id':PARSE_APP_ID,'X-Parse-Master-Key':PARSE_MASTER_KEY},body:JSON.stringify(payload)});const d=await r.json();res.json(d?.result||{ok:true});}catch(e){console.error(e);res.status(500).json({ok:false,error:e.message||String(e)});}});
app.listen(PORT,()=>console.log('Site-API on :'+PORT));